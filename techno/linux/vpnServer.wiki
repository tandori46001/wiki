= VPN SERVER =
<!-- This is a comment -->

== run http server in order to share .ovpn file ==
<pre>
cd openvpn
python -m SimpleHTTPServer 8080
</pre>

== install openvpn ==
<pre>
sudo apt-get install openvpn -y
sudo reboot
</pre>

== tester open vpn ==
<pre>
# sudo openvpn --config "/etc/openvpn/xxxxxxxxx.ovpn"
</pre>

== creer script pour lancer VPN ==
<pre>
# vi /etc/openvpn/lunchVPN.sh
#!/bin/bash
### BEGIN INIT INFO
# Provides:          haltusbpower
# Required-Start:    $all
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Halts USB power...
### END INIT INFO

vpnOntarioMintaka="/etc/openvpn/AirVPN_CA-Toronto-Ontario_Mintaka_UDP-443.ovpn"
</pre>

== lancer vpn ==
<pre>
openvpn --config $vpnOntarioMintaka
</pre>

== creer lien symbolique dans init.d ==
<pre>
# cd /etc/init.d
ls -n /etc/openvpn/lunchVPN.sh lunchVPN
</pre>

== rendre la connexion a openvpn automatique ==
<pre>
# vi /etc/systemd/system/lunchVPN.service

[Unit]
ConditionPathExists=/etc/init.d/lunchVPN
After=network.service

[Service]
ExecStart=/etc/init.d/lunchVPN

[Install]
#WantedBy=default.target
WantedBy=multi-user.target
~

# chmod 644 /etc/systemd/system/lunchVPN.service
# sudo systemctl daemon-reload
# systemctl enable lunchVPN.service
# reboot
</pre>

<pre>
root@tandori46001:~# curl ipinfo.io/ip
184.75.223.219
</pre>

#!/bin/bash
# --------------------------------------------------------
# Air VPN | https://airvpn.org | Sunday 4th of March 2018 07:45:35 PM
# SSH Client Configuration, Linux/OSX
# AirVPN_US-Atlanta-Georgia_Sagittarius_SSH-22
# --------------------------------------------------------
 
#!/bin/sh
/sbin/ip route add 45.63.107.248/32 dev ens3
 
chmod 600 sshtunnel.key
while :
do
echo ""; echo "AirVPN SSH Tunnel"
ssh -i sshtunnel.key -L 1412:127.0.0.1:2018 sshtunnel@108.177.134.74 -p 22 -N -$
read -t 5 -p "Retry? (or wait 5 sec for Y)" yn
if [[ $yn == "n" || $yn == "N" ]]; then break; fi
done```


# We changed a bunch of stuff in iptables when we used our Pi as a wireless access point, but we need to change that now.
+++iptables: This clears out the old stuff.
<pre>
sudo iptables -F
sudo iptables -t nat -F
sudo iptables -X
</pre>
#And this is what we want now. This will route the wlan0 connection through our tunnel instead of over the Ethernet connection.
<pre>
sudo iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE
sudo iptables -A FORWARD -i tun0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i wlan0 -o tun0 -j ACCEPT
</pre>
#This saves our work.
<pre>
sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
</pre>