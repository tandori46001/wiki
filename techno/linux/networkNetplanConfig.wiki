= network netplan configuration =
*REF: https://netplan.io/examples/

== Find Wireless Interface Name ==
<pre>
ls /sys/class/net
</pre>

<pre>
# Use ip command: ip link or ip addr
ip link show | grep -i wlp | awk -F: '{print $2}' | xargs
ip addr show | grep -i wlp | awk -F: '{print $2}' | xargs# Use iw tool
iw dev | awk '$1=="Interface" {print $2}'# Use lshw to check wireless adapters
sudo lshw -C network \
 | awk '/Wireless interface/,/logical name/ {print $3}' \
 | tail -1
</pre>

== How to Set Static IP Address ==
<pre>
etwork:
  version: 2
  renderer: networkd
  ethernets:
    en01:
      addresses:
      - 192.168.1.25/24
      - "2001:1::1/64"
      gateway4: 192.168.1.1
      gateway6: "2001:1::2"
      nameservers:
        addresses:
        - 8.8.8.8
        - 8.8.4.4
</pre>

<pre>
sudo netplan apply
</pre>

== How to set DHCP Addresses ==
<pre>
network:
  version: 2
  renderer: networkd
  ethernets:
    en01:
      dhcp4: true
      dhcp6: true
</pre>

== How to Set DNS ==
<pre>
ethernets:
  en01:
    [...]
    nameservers:
      search: [lab, home]
      addresses: [8.8.8.8, "FEDC::1"]
</pre>

== How to set WiFi Authentication ==
=== Configuring WPA and EAP WiFi Connections ===
<pre>
ethernets:
  id0:
    [...]
    access-points:
      mode: infrastructure
      bssid: mywifi
      band: 5GHz
      channel: 5
    auth:
      key-management: none | psk | eap 
      password: my-password-string
</pre>

<pre>
    mode set the mode type for your wifi network interface. For connecting to access points the value should be set to infrastructure, which is the default.
    bassid is the name of your wifi connection, as configured on your access point.
    band is used to set the wireless band. It accepts two values: 5GHz and 2.4GHz. If left unset, the wifi endpoint and your network device will automatically establish the best band. By setting this value you will force the connection to use a specific band.
    channel is used to set your wifi channel, and only takes affect if the band property is set.

WPA and EAP connection modes accept the following configurations.

    key-management sets how the supported key management mode.
        none to disable key management
        psk for WPA with pre-shared key, common for home wifi.
        eap for WPA with EAP, which is common for enterprise wifi networks.
    password sets the pre-shared key or password for your wifi network, when the mode is set to either psk or eap.
</pre>

=== Connecting to a WPA Personal wireless network ===
<pre>
network:
    version: 2
    renderer: networkd
    wifis:
        wlp2s0b1:
            dhcp4: no
            dhcp6: no
            addresses: [192.168.0.21/24]
            gateway4: 192.168.0.1
            nameservers:
                addresses: [192.168.0.1, 8.8.8.8]
            access-points:
                "network_ssid_name":
                    password: "**********"
</pre>


=== Connecting to WPA Enterprise wireless networks ===
==== if the network is secured using WPA-EAP and TTLS: ====
<pre>
network:
    version: 2
    wifis:
        wl0:
            access-points:
                workplace:
                    auth:
                        key-management: eap
                        method: ttls
                        anonymous-identity: "@internal.example.com"
                        identity: "joe@internal.example.com"
                        password: "v3ryS3kr1t"
            dhcp4: yes
</pre>

==== if the network is secured using WPA-EAP and TLS: ====
<pre>
network:
    version: 2
    wifis:
        wl0:
            access-points:
                university:
                    auth:
                        key-management: eap
                        method: tls
                        anonymous-identity: "@cust.example.com"
                        identity: "cert-joe@cust.example.com"
                        ca-certificate: /etc/ssl/cust-cacrt.pem
                        client-certificate: /etc/ssl/cust-crt.pem
                        client-key: /etc/ssl/cust-key.pem
                        client-key-password: "d3cryptPr1v4t3K3y"
            dhcp4: yes
</pre>

==== Exemples: ====
<pre>
network:
  ethernetes: {}
  wifis:
    wlp2s0:
      dhcp4: true
      optional:true
      access-points:
        "network_ssid_name":
          password: "**********"
  version: 2
  renderer: networkd
</pre>

<pre>
network:
  ethernetes: {}
  wifis:
    wlp2s0:
      dhcp4: no
      dhcp6: no
      optional:true
      addresses: [192.168.1.22/24]
      gateway4: 192.168.1.1
      nameservers:
        addresses: [1.1.1.1, 8.8.8.8]
      access-points:
        "network_ssid_name":
          password: "**********"
  version: 2
  renderer: networkd
</pre>



== Using multiple addresses on a single interface ==
<pre>
network:
    version: 2
    renderer: networkd
    ethernets:
        enp3s0:
         addresses:
             - 10.100.1.38/24
             - 10.100.1.39/24
         gateway4: 10.100.1.1
</pre>

== Using multiple addresses with multiple gateways ==
<pre>
network:
    version: 2
    renderer: networkd
    ethernets:
        enp3s0:
         addresses:
             - 9.0.0.9/24
             - 10.0.0.10/24
             - 11.0.0.11/24
         #gateway4:  # unset, since we configure routes below
         routes:
             - to: 0.0.0.0/0
                 via: 9.0.0.1
                 metric: 100
             - to: 0.0.0.0/0
                 via: 10.0.0.1
                 metric: 100
             - to: 0.0.0.0/0
                 via: 11.0.0.1
                 metric: 100
</pre>
